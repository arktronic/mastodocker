version: '3'
services:
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    shm_size: 256mb
    networks:
      internal_network:
        ipv4_address: 172.24.0.21
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - ${POSTGRES_DATA_LOCATION}:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      internal_network:
        ipv4_address: 172.24.0.31
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ${REDIS_DATA_LOCATION}:/data

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    restart: unless-stopped
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "xpack.security.transport.ssl.enabled=false"
      - "xpack.watcher.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.ml.enabled=false"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "thread_pool.write.queue_size=1000"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.41
    healthcheck:
       test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
    volumes:
       - ${ELASTICSEARCH_DATA_LOCATION}:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - '9200:9200'

  web:
    image: tootsuite/mastodon:v4.0.2
    restart: unless-stopped
    env_file: .env.production
    environment:
      - DB_PASS=${POSTGRES_PASSWORD}
      - ES_PASS=${ELASTICSEARCH_PASSWORD}
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.11
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
      - es
      - promstatsdexporter
      - minio
    volumes:
      - ${MASTODON_DATA_LOCATION}:/opt/mastodon/public/system

  streaming:
    image: tootsuite/mastodon:v4.0.2
    restart: unless-stopped
    env_file: .env.production
    environment:
      - DB_PASS=${POSTGRES_PASSWORD}
      - ES_PASS=${ELASTICSEARCH_PASSWORD}
    command: node ./streaming
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.12
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '4000:4000'
    depends_on:
      - db
      - redis
      - promstatsdexporter
      - minio

  sidekiq:
    image: tootsuite/mastodon:v4.0.2
    restart: unless-stopped
    env_file: .env.production
    environment:
      - DB_PASS=${POSTGRES_PASSWORD}
      - ES_PASS=${ELASTICSEARCH_PASSWORD}
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
      - promstatsdexporter
      - minio
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.13
    volumes:
      - ${MASTODON_DATA_LOCATION}:/opt/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  mastohelper:
    profiles: [mastohelper-do-not-use-directly]
    image: tootsuite/mastodon:v4.0.2
    restart: "no"
    command: bash -c "exit"
    networks:
      external_network:

  minio:
    image: quay.io/minio/minio:RELEASE.2022-12-12T19-27-27Z
    restart: unless-stopped
    command: server /data --console-address ":9292"
    environment:
      - MINIO_ROOT_USER=mastoadmin
      - MINIO_ROOT_PASSWORD=${MINIO_ADMIN_PASSWORD}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.15
    ports:
      - 9292:9292
    volumes:
      - ${MINIO_DATA_LOCATION}:/data

  minio-mc:
    profiles: [minio-mc-do-not-use-directly]
    image: quay.io/minio/mc:RELEASE.2022-12-13T00-23-28Z
    restart: "no"
    networks:
      external_network:
    volumes:
      - minio_mc_data:/root/.mc
      - ${MINIO_CONF_LOCATION}:/minio-conf:ro

  minio-aws:
    profiles: [minio-aws-do-not-use-directly]
    image: amazon/aws-cli:2.9.9
    restart: "no"
    networks:
      external_network:
    volumes:
      - minio_aws_data:/root/.aws

  nginx:
    image: nginx:stable
    restart: unless-stopped
    depends_on:
      - web
      - streaming
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.2
    ports:
      - 443:443
    volumes:
      - ${NGINX_CONF_LOCATION}:/nginx-data:ro
      - ${NGINX_CONF_LOCATION}/default.conf:/etc/nginx/conf.d/default.conf:ro

  libretranslate:
    profiles: [libretranslate]
    image: localhost/mastodocker/libretranslate:latest
    build:
      context: .
      dockerfile: libretranslate.dockerfile
      args:
        # The following is a hash pointing to a LibreTranslate GitHub commit:
        - GIT_CHECKOUT=7c5d798fd55acb092c123a97fc0d8e2644a0de4e
    init: true
    restart: unless-stopped
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.14

  prometheus:
    image: quay.io/prometheus/prometheus:v2.40.5
    restart: unless-stopped
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.51
    ports:
      - 9090:9090
    volumes:
      - ${PROMETHEUS_CONF_LOCATION}:/etc/prometheus:ro
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana-oss:9.3.1-ubuntu
    restart: unless-stopped
    environment:
      - "GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/json/node.json"
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.52
    ports:
      - 9191:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ${GRAFANA_PROVISIONING_LOCATION}:/etc/grafana/provisioning:ro

  promnodeexporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--no-collector.netdev'
    pid: host
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.53
    volumes:
      - '/:/host:ro,rslave'

  promstatsdexporter:
    image: quay.io/prometheus/statsd-exporter:v0.22.8
    restart: unless-stopped
    command:
      - '--statsd.mapping-config=/etc/prometheus/statsd-mapping.yml'
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.54
    volumes:
      - ${PROMETHEUS_CONF_LOCATION}:/etc/prometheus:ro

  promnginxexporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    restart: unless-stopped
    command:
      - '-nginx.scrape-uri=http://172.24.0.2:8080/stub_status'
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.55

  prompostgresexporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.11.1
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:pgPasswordForInternalUseOnly243247-t@db:5432/postgres?sslmode=disable
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.56

  promredisexporter:
    image: oliver006/redis_exporter:v1.45.0
    restart: unless-stopped
    command:
      - '--redis.addr=redis:6379'
    networks:
      external_network:
      internal_network:
        ipv4_address: 172.24.0.57

networks:
  external_network:
  internal_network:
    internal: true
    ipam:
      config:
        - subnet: 172.24.0.0/24

volumes:
  prometheus_data:
  grafana_data:
  minio_mc_data:
  minio_aws_data:
